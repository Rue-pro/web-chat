name: API build

defaults:
  run:
    working-directory: ./apps/api

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  install:
    runs-on: ubuntu-latest
    container: node:17
    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: nodemodules-api-${{ hashFiles('yarn.lock') }}
        with:
          path: "**/node_modules"
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

  eslint:
    name: ESLint
    needs: install
    runs-on: ubuntu-latest
    container: node:17
    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: nodemodules-api-${{ hashFiles('yarn.lock') }}
        with:
          path: "**/node_modules"
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Lint source code with ESLint
        run: yarn lint

  prettier:
    name: Prettier
    needs: install
    runs-on: ubuntu-latest
    container: node:17
    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: nodemodules-api-${{ hashFiles('yarn.lock') }}
        with:
          path: "**/node_modules"
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Prettify source code with Prettier
        run: yarn check-format

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest
    container: node:17
    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: nodemodules-api-${{ hashFiles('yarn.lock') }}
        with:
          path: "**/node_modules"
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Build api
        run: yarn build

  tests:
    name: Test
    needs: install
    runs-on: ubuntu-latest
    container: node:17
    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: nodemodules-api-${{ hashFiles('yarn.lock') }}
        with:
          path: "**/node_modules"
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Test api
        run: yarn test
